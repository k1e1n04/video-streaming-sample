name: Generate GRPC Code

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  push:
    branches:
      - master

jobs:
  test:
    permissions:
      contents: write
      pull-requests: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install dependencies
        env:
          PROTOC_VERSION: 30.1
        run: |
          PB_REL="https://github.com/protocolbuffers/protobuf/releases"
          curl -LO $PB_REL/download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-linux-x86_64.zip
          unzip protoc-$PROTOC_VERSION-linux-x86_64.zip -d $HOME/.local
          export PATH="$PATH:$HOME/.local/bin"
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.5.1
          cd frontend && yarn install --frozen-lockfile
          cd ..

      - name: Generate GRPC Code for Go
        run: |
          protoc --proto_path=./proto --go_out=. --go-grpc_out=. video.proto

      - name: Generate GRPC Code for TypeScript
        run: |
          protoc --plugin=protoc-gen-ts=./frontend/node_modules/.bin/protoc-gen-ts --ts_out=./frontend/src/proto --proto_path=proto video.proto

      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet
          then
            git add -A
            git commit -m "Generate GRPC Code"
            git push
          fi
